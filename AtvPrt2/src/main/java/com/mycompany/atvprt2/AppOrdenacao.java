/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.atvprt2;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author gusta
 */
public class AppOrdenacao extends javax.swing.JFrame {

    /**
     * Creates new form AppOrdenacao
     */
    public AppOrdenacao() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        elementosButtonGroup = new javax.swing.ButtonGroup();
        cenarioButtonGroup = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        executarJButton = new javax.swing.JButton();
        LimparJButton = new javax.swing.JButton();
        RelatorioJLabel = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        EntradajLabel = new javax.swing.JLabel();
        CenariojLabel = new javax.swing.JLabel();
        DezElementosRB = new javax.swing.JRadioButton();
        CinquentaElementosRB = new javax.swing.JRadioButton();
        VinteMilElementosRB = new javax.swing.JRadioButton();
        randomCenRB = new javax.swing.JRadioButton();
        OrdCresRB = new javax.swing.JRadioButton();
        OrdDecRB = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        executarJButton.setText("Executar ");
        executarJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                executarJButtonActionPerformed(evt);
            }
        });

        LimparJButton.setText("Limpar Relat칩rio");
        LimparJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LimparJButtonActionPerformed(evt);
            }
        });

        RelatorioJLabel.setText("Relat칩rio");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"Insertion Sort", null, null},
                {"Selection Sort", null, null},
                {"Merge Sort", null, null},
                {"Quick Sort", null, null}
            },
            new String [] {
                "Algoritmo", "Tempo Exec", "Qtde Trocas"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        EntradajLabel.setText("Tamanho da Entrada");
        EntradajLabel.setToolTipText("");

        CenariojLabel.setText("Cen치rio");

        cenarioButtonGroup.add(DezElementosRB);
        DezElementosRB.setText("10 Elementos");
        DezElementosRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DezElementosRBActionPerformed(evt);
            }
        });

        cenarioButtonGroup.add(CinquentaElementosRB);
        CinquentaElementosRB.setText("50 Elementos");

        cenarioButtonGroup.add(VinteMilElementosRB);
        VinteMilElementosRB.setText("20.000 Elementos");

        elementosButtonGroup.add(randomCenRB);
        randomCenRB.setText("Random (aleat칩rio)");

        elementosButtonGroup.add(OrdCresRB);
        OrdCresRB.setText("Ordenado (crescente)");

        elementosButtonGroup.add(OrdDecRB);
        OrdDecRB.setText("Ordenado (decrescente)");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(EntradajLabel)
                            .addComponent(CenariojLabel)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(DezElementosRB))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(VinteMilElementosRB))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(CinquentaElementosRB))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(randomCenRB))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(OrdDecRB))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(OrdCresRB)))
                .addGap(144, 144, 144)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(225, 225, 225)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(executarJButton)
                        .addGap(40, 40, 40)
                        .addComponent(LimparJButton))
                    .addComponent(RelatorioJLabel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(executarJButton)
                    .addComponent(LimparJButton)
                    .addComponent(EntradajLabel))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(RelatorioJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(DezElementosRB)
                        .addGap(12, 12, 12)
                        .addComponent(CinquentaElementosRB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(VinteMilElementosRB)
                        .addGap(40, 40, 40)
                        .addComponent(CenariojLabel)
                        .addGap(18, 18, 18)
                        .addComponent(randomCenRB)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OrdCresRB, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(OrdDecRB)))
                .addContainerGap(55, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 623, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void executarJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_executarJButtonActionPerformed
                                                
    ArraysExecutaveis array = new ArraysExecutaveis();
    int[] arraySelecionado;
    
    if (DezElementosRB.isSelected()) {
        arraySelecionado = array.arr10;
    } else if (CinquentaElementosRB.isSelected()) {
        arraySelecionado = array.arr50;
    } else if (VinteMilElementosRB.isSelected()) {
        arraySelecionado = array.arr20000;
    } else {
        return;
    }
    
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    array.GerarEntradasAleatorias(arraySelecionado, arraySelecionado.length);

    if (randomCenRB.isSelected()) {
        // Ordena칞칚o aleat칩ria
        long inicio = System.nanoTime();
        long fim = System.nanoTime();
        double tempoExecucao = (fim - inicio) / 1_000_000_000.0;
        model.setValueAt(tempoExecucao, 0, 1);
        model.setValueAt(0, 0, 2);  // Sem trocas para ordena칞칚o aleat칩ria
        model.setValueAt(tempoExecucao, 1, 1);
        model.setValueAt(0, 1, 2);  // Sem trocas para ordena칞칚o aleat칩ria
        model.setValueAt(tempoExecucao, 2, 1);
        model.setValueAt(0, 2, 2);  // Sem trocas para ordena칞칚o aleat칩ria
        model.setValueAt(tempoExecucao, 3, 1);
        model.setValueAt(0, 3, 2);  // Sem trocas para ordena칞칚o aleat칩ria
    } else if (OrdCresRB.isSelected()) {
        // Ordena칞칚o crescente
        array.trocas = 0;
        long inicio = System.nanoTime();
        array.insertionSort(arraySelecionado);
        long fim = System.nanoTime();
        double tempoExecucaoInsertionSort = (fim - inicio) / 1_000_000_000.0;
        int trocasInsertionSort = array.trocas;
        model.setValueAt(tempoExecucaoInsertionSort, 0, 1);
        model.setValueAt(trocasInsertionSort, 0, 2);

        array.trocas = 0;
        inicio = System.nanoTime();
        array.selectionSort(arraySelecionado);
        fim = System.nanoTime();
        double tempoExecucaoSelectionSort = (fim - inicio) / 1_000_000_000.0;
        int trocasSelectionSort = array.trocas;
        model.setValueAt(tempoExecucaoSelectionSort, 1, 1);
        model.setValueAt(trocasSelectionSort, 1, 2);

        array.trocas = 0;
        inicio = System.nanoTime();
        array.mSort(arraySelecionado, 0, arraySelecionado.length - 1);
        fim = System.nanoTime();
        double tempoExecucaoMergeSort = (fim - inicio) / 1_000_000_000.0;
        int trocasMergeSort = array.trocas;
        model.setValueAt(tempoExecucaoMergeSort, 2, 1);
        model.setValueAt(trocasMergeSort, 2, 2);

        array.trocas = 0;
        inicio = System.nanoTime();
        array.quickSort(arraySelecionado, 0, arraySelecionado.length - 1);
        fim = System.nanoTime();
        double tempoExecucaoQuickSort = (fim - inicio) / 1_000_000_000.0;
        int trocasQuickSort = array.trocas;
        model.setValueAt(tempoExecucaoQuickSort, 3, 1);
        model.setValueAt(trocasQuickSort, 3, 2);
    
        // Ordena칞칚o decrescente    
    } else if (OrdDecRB.isSelected()) {
        array.trocas = 0;
        long inicio = System.nanoTime();
        array.insertionSortDecrescente(arraySelecionado);
        long fim = System.nanoTime();
        double tempoExecucaoInsertionSortDecrescente = (fim - inicio) / 1_000_000_000.0;
        int trocasInsertionSortDecrescente = array.trocas;
        model.setValueAt(tempoExecucaoInsertionSortDecrescente, 0, 1);
        model.setValueAt(trocasInsertionSortDecrescente, 0, 2);

        array.trocas = 0;
        inicio = System.nanoTime();
        array.selectionSortDecrescente(arraySelecionado);
        fim = System.nanoTime();
        double tempoExecucaoSelectionSortDecrescente = (fim - inicio) / 1_000_000_000.0;
        int trocaBugada = array.trocas;
        int trocasSelectionSortDecrescente = array.trocas;
        
        model.setValueAt(tempoExecucaoSelectionSortDecrescente, 1, 1);
        model.setValueAt(trocasSelectionSortDecrescente, 1, 2);
        model.setValueAt(trocaBugada, 1, 2);
        
        array.trocas = 0;
        inicio = System.nanoTime();
        array.mSortDecrescente(arraySelecionado, 0, arraySelecionado.length - 1);
        fim = System.nanoTime();
        double tempoExecucaoMergeSortDecrescente = (fim - inicio) / 1_000_000_000.0;
        int trocasMergeSortDecrescente = array.trocas;
        model.setValueAt(tempoExecucaoMergeSortDecrescente, 2, 1);
        model.setValueAt(trocasMergeSortDecrescente, 2, 2);

        array.trocas = 0;
        inicio = System.nanoTime();
        array.quickSortDecrescente(arraySelecionado, 0, arraySelecionado.length - 1);
        fim = System.nanoTime();
        double tempoExecucaoQuickSortDecrescente = (fim - inicio) / 1_000_000_000.0;
        int trocasQuickSortDecrescente = array.trocas;
        model.setValueAt(tempoExecucaoQuickSortDecrescente, 3, 1);
        model.setValueAt(trocasQuickSortDecrescente, 3, 2);
    } else {
        return;
    }
    }//GEN-LAST:event_executarJButtonActionPerformed

    private void DezElementosRBActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DezElementosRBActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DezElementosRBActionPerformed

    private void LimparJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LimparJButtonActionPerformed
        // TODO add your handling code here:
         DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    for (int i = 0; i < model.getRowCount(); i++) {
        for (int j = 1; j < model.getColumnCount(); j++) {
            model.setValueAt(null, i, j);
        }
    }
    }//GEN-LAST:event_LimparJButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AppOrdenacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AppOrdenacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AppOrdenacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AppOrdenacao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AppOrdenacao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CenariojLabel;
    private javax.swing.JRadioButton CinquentaElementosRB;
    private javax.swing.JRadioButton DezElementosRB;
    private javax.swing.JLabel EntradajLabel;
    private javax.swing.JButton LimparJButton;
    private javax.swing.JRadioButton OrdCresRB;
    private javax.swing.JRadioButton OrdDecRB;
    private javax.swing.JLabel RelatorioJLabel;
    private javax.swing.JRadioButton VinteMilElementosRB;
    private javax.swing.ButtonGroup cenarioButtonGroup;
    private javax.swing.ButtonGroup elementosButtonGroup;
    private javax.swing.JButton executarJButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JRadioButton randomCenRB;
    // End of variables declaration//GEN-END:variables
}
